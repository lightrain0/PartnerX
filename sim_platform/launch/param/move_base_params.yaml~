# Move base node parameters. For full documentation of the parameters in this file, please see
#
#  http://www.ros.org/wiki/move_base
#

#base_global_planner:default "navfn/NavfnROS" "global_planner/GlobalPlanner" "carrot_planner/CarrotPlanner"
base_global_planner: "global_planner/GlobalPlanner"
#base_global_planner: "carrot_planner/CarrotPlanner"
#base_global_planner: "linear_global_planner/LinearGlobalPlanner"
#base_global_planner: "navfn/NavfnROS"
#base_local_planner:default: "base_local_planner/TrajectoryPlannerROS","dwa_local_planner/DWAPlannerROS"
# "teb_local_planner/TebLocalPlannerROS" "eband_local_planner"
base_local_planner: "teb_local_planner/TebLocalPlannerROS"
#base_local_planner: "dwa_local_planner/DWAPlannerROS"
base_local_planner: "ftc_local_planner/FTCPlanner"
#base_local_planner: "base_local_planner/TrajectoryPlannerROS"


#The rate in Hz at which to run the control loop and send velocity commands to the base.
controller_frequency: 5.0

#How long the controller will wait in seconds without receiving a valid control before space-clearing operations are performed.
controller_patience: 3.0

#The rate in Hz at which to run the global planning loop.
#If the frequency is set to 0.0, the global planner will only run
#when a new goal is received or the local planner reports that its path is blocked.
planner_frequency: 5.0

#How long the planner will wait in seconds in an attempt to find a valid plan before space-clearing operations are performed
planner_patience: 3.0

#Whether or not to enable the move_base recovery behaviors to attempt to clear out space.
recovery_behavior_enabled: true

#Determines whether or not the robot will attempt an in-place rotation when attempting to clear out space.
# Note: This parameter is only used when the default recovery behaviors are in use,
#meaning the user has not set the recovery_behaviors parameter to anything custom.
clearing_rotation_allowed: true

#Determines whether or not to shutdown the costmaps of the node when move_base is in an inactive stat
shutdown_costmaps: false

#How long in seconds to allow for oscillation before executing recovery behaviors.
#A value of 0.0 corresponds to an infinite timeout.
oscillation_timeout: 0.0
#How far in meters the robot must move to be considered not to be oscillating.
#Moving this far resets the timer counting up to the ~oscillation_timeout
oscillation_distance: 0.2

# remap cmd_vel
# current_goal
# goal   #action
